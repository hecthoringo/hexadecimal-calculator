;Calculadora Hexadecimal a 16 bits
;Esta calculadora esta desarrollada en macroensamblador
;@author	Hector Martin Valencia Herrera
;@email		contacto@hecthoringo.com

DATOS SEGMENT PARA 'DATA'
	NUM1 DW 0000
	NUM2 DW 0000
	X DB 0
	Y DB 0
	X1 DB 0
	Y1 DB 0
	X2 DB 0
	Y2 DB 0
	CONTRASENA DB "1234",0DH
	TEMP_CONTRASENA DB ?
	MSJ_PORCERO DB "MATH ERROR!$"
	LET_CONTRASENA DB "CONTRASENA:$"
	LET_CONTRASENA_INCORRECTA DB "CONTRASENA INVALIDA$"
	LET_INTENTO DB "INTENTO$"
	INFORMACION DB "ESC=salir INTRO=seleccionar SUP=borrar    ",18H," arriba ",19H," abajo ",1BH," izquierda ",1AH," derecha$"
DATOS ENDS

PILA SEGMENT PARA STACK 'STACK'
	DW 100 DUP(0)
PILA ENDS

CODIGO SEGMENT PARA 'CODE'
	ASSUME DS:DATOS, SS:PILA, CS:CODIGO
	
	;LIMPIAR_PANTALLA
	;Establece el color de fondo de pantalla y texo, el taman√±o y pagina
	;@param	BH	Color de fondo de pantalla (0-F) y texto (0-F)
	;@param	CX  CL: Coloumna inicial, CH: Fila inicial
	;@param	DX  DL: Coloumna final, DH: Fila final
	;@ret
	
	LIMPIAR_PANTALLA PROC NEAR
		MOV AX,0600H ;AL: Pagina, AH:Numero INT
		INT 10H
		RET
	LIMPIAR_PANTALLA ENDP
	
	;POSICIONAR_CURSOR
	;Mueve el cursor
	;@param	DX  DL: Coloumna, DH: Fila
	;@ret
	
	POSICIONAR_CURSOR PROC NEAR
		MOV AH,02H
		MOV BH,00H		
		INT 10H
		RET
	POSICIONAR_CURSOR ENDP
	
	;LEER_SIN_ECO
	;@ret	AL	Codigo ASCII de caracter
	;Lee desde teclado un caracter
	
	LEER_SIN_ECO PROC NEAR
		MOV AH,10H
		INT 16H
		RET
	LEER_SIN_ECO ENDP
	
	;LEER_CURSOR
	;Lee desde pantalla un caracter
	;@ret	AL	Codigo ASCII de caracter
	
	LEER_CURSOR PROC NEAR
		MOV AH,08H
		MOV BH,00 ;pagina
		INT 10H
		RET
	LEER_CURSOR ENDP
	
	;ESCRIBIR_CARACTER
	;Escribe un caracter
	;@param	DL	Codigo ASCII de caracter a escribir
	;@ret
	
	ESCRIBIR_CARACTER PROC NEAR
		MOV AH,02H
		INT 21H
		RET
	ESCRIBIR_CARACTER ENDP
	
	;ESCRIBIR_CARACTER_REPETICION
	;Escribe n veces un caracter apartir de la posicion del cursor 
	;@param	AL	Codigo ASCII de caracter a escribir
	;@param	CX	Numero de veces a escribir caracter
	;@ret
	
	ESCRIBIR_CARACTER_REPETICION PROC NEAR
		MOV AH,0AH 
		MOV BH,00H ;Numero de pagina
		INT 10H
		RET
	ESCRIBIR_CARACTER_REPETICION ENDP
	
	;IMPRIMIR_CADENA
	;Imprime en pantalla una cadena
	;@param	DX	Cadena a imprimir
	;@ret
	
	IMPRIMIR_CADENA PROC NEAR
		MOV AH,09H		
		INT 21H
		RET
	IMPRIMIR_CADENA ENDP
	
	;DIBUJAR_LINEA_HORIZONTAL
	;Dibuja una linea horizontal
	;@param	AL	Caracter a dibujar
	;@param	CL	Numero de columna inicial
	;@param	CH	Numero de fila inicial
	;@param	DL	Numero de columna final
	;@param	DH	Numero de fila final
	;@ret
	
	DIBUJAR_LINEA_HORIZONTAL PROC NEAR	
	
		XCHG DX,CX
		CALL POSICIONAR_CURSOR
		SUB CL,CH
		MOV CH,00
		CALL ESCRIBIR_CARACTER_REPETICION
		
		RET
	DIBUJAR_LINEA_HORIZONTAL ENDP
	
	;DIBUJAR_LINEA_VERTICAL
	;Dibuja una linea vertical
	;@param	CL	Numero de columna inicial
	;@param	CH	Numero de fila inicial
	;@param	DL	Caracter a dibujar
	;@ret
	
	DIBUJAR_LINEA_VERTICAL PROC NEAR
	
		PUSH DX
		XCHG DX,CX
		CALL POSICIONAR_CURSOR	
		POP DX
		CALL ESCRIBIR_CARACTER
		
		RET
	DIBUJAR_LINEA_VERTICAL ENDP
	
	;DIBUJAR_MARCO
	;Dibuja un marco con lineas verticales y horizontales
	;@param	X1	Columna inicial
	;@param	Y1	Fila inicial
	;@param	X2	Columna final
	;@param	Y2	Fila final
	;@ret
	
	DIBUJAR_MARCO PROC NEAR
		;DIBUJA LINEAS HORIZONTALES
		MOV AL,205 ;caracter linea horizontal
		MOV CL,X1
		MOV CH,Y1
		MOV DL,X2		
		MOV DH,CL ;Fila inicial y final son iguales
		CALL DIBUJAR_LINEA_HORIZONTAL
		
		MOV AL,205 ;caracter linea horizontal
		MOV CL,X1
		MOV CH,Y2
		MOV DL,X2
		MOV DH,CL ;Fila inicial y final son iguales
		CALL DIBUJAR_LINEA_HORIZONTAL
		
		;DIBUJA LINEAS VERTICALES
		MOV CL,Y2
		SUB CL,Y1
		MOV CH,0
		MOV AH,Y1
		MOV Y,AH
		VERTICALES:
			PUSH CX
			MOV CH,Y
			MOV CL,X1
			MOV DL,186 ;caracter linea vertical
			CALL DIBUJAR_LINEA_VERTICAL			
			MOV CH,Y
			MOV CL,X2
			MOV DL,186 ;caracter linea vertical
			CALL DIBUJAR_LINEA_VERTICAL
			POP CX
			INC Y
		LOOP VERTICALES
		   
		MOV DH,Y1
		MOV DL,X1
		CALL POSICIONAR_CURSOR
		MOV DL,201
		CALL ESCRIBIR_CARACTER
		MOV DH,Y1
		MOV DL,X2
		CALL POSICIONAR_CURSOR
		MOV DL,187
		CALL ESCRIBIR_CARACTER
		MOV DH,Y2
		MOV DL,X1
		CALL POSICIONAR_CURSOR
		MOV DL,200
		CALL ESCRIBIR_CARACTER
		MOV DH,Y2
		MOV DL,X2
		CALL POSICIONAR_CURSOR
		MOV DL,188
		CALL ESCRIBIR_CARACTER
		
		RET
	DIBUJAR_MARCO ENDP
	
	;CALCULADORA
	;Programa principal
	;@param
	;@ret
	
	CALCULADORA PROC NEAR
	;FONDO
		;Pantalla
		MOV BH,4FH
		MOV CL,0
		MOV CH,0
		MOV DL,79
		MOV DH,32
		CALL LIMPIAR_PANTALLA
		;Calculadora
		MOV BH,9FH		
		MOV CL,25
		MOV CH,1
		MOV DL,49
		MOV DH,29
		CALL LIMPIAR_PANTALLA
		
	;DIBUJA EL MARCO DE LA CALCULADORA
		MOV AL,25
		MOV X1,AL
		MOV AL,1
		MOV Y1,AL
		MOV AL,49
		MOV X2,AL
		MOV AL,29
		MOV Y2,AL
		CALL DIBUJAR_MARCO
		
	;DIBUJAR LA CUADRICULA DE LA CALCULADORA
		;Lineas horizontales
		MOV CX,6
		MOV Y,5
		LHORIZONTAL:
			PUSH CX
			;Caracter 205 linea horizontal
			MOV AL,205
			MOV CL,25
			MOV CH,Y
			MOV DL,49		
			MOV DH,CL ;Fila inicial y final son iguales
			CALL DIBUJAR_LINEA_HORIZONTAL
			;Caracter 204
			MOV DL,25
			MOV DH,Y
			CALL POSICIONAR_CURSOR
			MOV DL,204
			CALL ESCRIBIR_CARACTER
			;Caracter 185
			MOV DL,49
			MOV DH,Y
			CALL POSICIONAR_CURSOR
			MOV DL,185
			CALL ESCRIBIR_CARACTER
			ADD Y,4
			POP CX
		LOOP LHORIZONTAL
		
		;Lineas verticales
		MOV CX,3
		MOV X,31
		LVERTICAL1:
			PUSH CX
				MOV CL,29
				SUB CL,5
				MOV CH,0
				MOV AH,5
				MOV Y,AH
				LVERTICALES2:
					PUSH CX
					MOV CH,Y
					MOV CL,X
					MOV DL,186 ;caracter linea vertical
					CALL DIBUJAR_LINEA_VERTICAL					
					POP CX
					INC Y
				LOOP LVERTICALES2
				;Caracter 203
				MOV DL,X
				MOV DH,5
				CALL POSICIONAR_CURSOR
				MOV DL,203
				CALL ESCRIBIR_CARACTER
				;Caracter 202
				MOV DL,X
				MOV DH,29
				CALL POSICIONAR_CURSOR
				MOV DL,202
				CALL ESCRIBIR_CARACTER
			POP CX
			ADD X,6
		LOOP LVERTICAL1
		MOV CX,5
		
		;Dibujar intersecciones
		MOV CX,0005H
		MOV Y,9H
	INTERSEC:
		MOV DL,31
		MOV DH,Y
		CALL POSICIONAR_CURSOR
		MOV DL,206
		CALL ESCRIBIR_CARACTER
		MOV DL,37
		MOV DH,Y
		CALL POSICIONAR_CURSOR
		MOV DL,206
		CALL ESCRIBIR_CARACTER
		MOV DL,43
		MOV DH,Y
		CALL POSICIONAR_CURSOR
		MOV DL,206
		CALL ESCRIBIR_CARACTER
		ADD Y,4H
		LOOP INTERSEC
		
	;CARACTERES DEL TECLADO DE LA CALCULADORA
		MOV DL,28
		MOV DH,7
		CALL POSICIONAR_CURSOR
		MOV DL,44H	;CARACTER 'D'
		CALL ESCRIBIR_CARACTER		
		
		MOV DL,34
		MOV DH,7
		CALL POSICIONAR_CURSOR
		MOV DL,45H	;CARACTER 'E'
		CALL ESCRIBIR_CARACTER		
		
		MOV DL,40
		MOV DH,7
		CALL POSICIONAR_CURSOR
		MOV DL,46H	;CARACTER 'E'
		CALL ESCRIBIR_CARACTER
		
		MOV DL,45
		MOV DH,7
		CALL POSICIONAR_CURSOR
		MOV DL,43H	;CARACTER 'C'
		CALL ESCRIBIR_CARACTER
		MOV DL,46
		MOV DH,7
		CALL POSICIONAR_CURSOR
		MOV DL,4CH	;CARACTER 'L'
		CALL ESCRIBIR_CARACTER
		MOV DL,47
		MOV DH,7
		CALL POSICIONAR_CURSOR
		MOV DL,52H	;CARACTER 'R'
		CALL ESCRIBIR_CARACTER
		
		MOV DL,28
		MOV DH,11
		CALL POSICIONAR_CURSOR
		MOV DL,41H	;CARACTER 'A'
		CALL ESCRIBIR_CARACTER		
		
		MOV DL,34
		MOV DH,11
		CALL POSICIONAR_CURSOR
		MOV DL,42H	;CARACTER 'B'
		CALL ESCRIBIR_CARACTER		
		
		MOV DL,40
		MOV DH,11
		CALL POSICIONAR_CURSOR
		MOV DL,43H	;CARACTER 'C'
		CALL ESCRIBIR_CARACTER
		
		MOV DL,46
		MOV DH,11
		CALL POSICIONAR_CURSOR
		MOV DL,246	;CARACTER '/'
		CALL ESCRIBIR_CARACTER
		
		MOV DL,28
		MOV DH,15
		CALL POSICIONAR_CURSOR
		MOV DL,37H	;CARACTER '7'
		CALL ESCRIBIR_CARACTER		
		
		MOV DL,34
		MOV DH,15
		CALL POSICIONAR_CURSOR
		MOV DL,38H	;CARACTER '8'
		CALL ESCRIBIR_CARACTER		
		
		MOV DL,40
		MOV DH,15
		CALL POSICIONAR_CURSOR
		MOV DL,39H	;CARACTER '9'
		CALL ESCRIBIR_CARACTER
		
		MOV DL,46
		MOV DH,15
		CALL POSICIONAR_CURSOR
		MOV DL,78H	;CARACTER 'x'
		CALL ESCRIBIR_CARACTER
		
		MOV DL,28
		MOV DH,19
		CALL POSICIONAR_CURSOR
		MOV DL,35H	;CARACTER '5'
		CALL ESCRIBIR_CARACTER		
		
		MOV DL,34
		MOV DH,19
		CALL POSICIONAR_CURSOR
		MOV DL,36H	;CARACTER '6'
		CALL ESCRIBIR_CARACTER		
		
		MOV DL,40
		MOV DH,19
		CALL POSICIONAR_CURSOR
		MOV DL,37H	;CARACTER '7'
		CALL ESCRIBIR_CARACTER
		
		MOV DL,46
		MOV DH,19
		CALL POSICIONAR_CURSOR
		MOV DL,2DH	;CARACTER '-'
		CALL ESCRIBIR_CARACTER
		
		MOV DL,28
		MOV DH,23
		CALL POSICIONAR_CURSOR
		MOV DL,31H	;CARACTER '1'
		CALL ESCRIBIR_CARACTER		
		
		MOV DL,34
		MOV DH,23
		CALL POSICIONAR_CURSOR
		MOV DL,32H	;CARACTER '2'
		CALL ESCRIBIR_CARACTER		
		
		MOV DL,40
		MOV DH,23
		CALL POSICIONAR_CURSOR
		MOV DL,33H	;CARACTER '3'
		CALL ESCRIBIR_CARACTER
		
		MOV DL,46
		MOV DH,23
		CALL POSICIONAR_CURSOR
		MOV DL,2BH	;CARACTER '+'
		CALL ESCRIBIR_CARACTER
		
		MOV DL,28
		MOV DH,27
		CALL POSICIONAR_CURSOR
		MOV DL,174	;CARACTER '<<'
		CALL ESCRIBIR_CARACTER		
		
		MOV DL,34
		MOV DH,27
		CALL POSICIONAR_CURSOR
		MOV DL,30H	;CARACTER '0'
		CALL ESCRIBIR_CARACTER		
		
		MOV DL,40
		MOV DH,27
		CALL POSICIONAR_CURSOR
		MOV DL,175	;CARACTER '>>'
		CALL ESCRIBIR_CARACTER
		
		MOV DL,46
		MOV DH,27
		CALL POSICIONAR_CURSOR
		MOV DL,3DH	;CARACTER '='
		CALL ESCRIBIR_CARACTER
	
	;MUESTRA EL DISPLAY DE LA CALCULADORA
		MOV AX,0000H ;Valor inicial
		CALL DISPLAY_CALCULADORA
		
	;INFORMACION DE USO
		MOV DL,0
		MOV DH,31
		CALL POSICIONAR_CURSOR
		LEA DX,INFORMACION
		CALL IMPRIMIR_CADENA
		
	;IMPLEMENTA EL MOVIMIENTO DEL CURSOR	
		;Posicion del cursor inicial
		MOV X1,46
		MOV Y1,27
		MOV DL,X1
		MOV DH,Y1
		CALL POSICIONAR_CURSOR
		;Segun codigo ASCII de tecla presionado
	CICLO:
		CALL LEER_SIN_ECO
		CMP AL,1BH ;ESC
		JE FINC
		CMP AL,0DH ;INTRO
		JE INTRO		
		CMP AL,0E0H ;grupo de teclas AL=E0H(Subir, Bajar, Izq, Der, Sup)
		JE SUBIR
		JMP CICLO
	INTRO:
		CMP AH,1CH
		JNE CICLO
			CALL LEER_TECLADO_CALCULADORA
			MOV DL,X1
			MOV DH,Y1
			CALL POSICIONAR_CURSOR
		JMP CICLO	
	SUBIR:
		CMP AH,48H
		JNE BAJAR
			CALL MUEVE_ARRIBA
		JMP CICLO
	BAJAR:
		CMP AH,50H
		JNE IZQUIERDA
			CALL MUEVE_ABAJO
		JMP CICLO
	IZQUIERDA:
		CMP AH,4BH
		JNE DERECHA
			CALL MUEVE_IZQUIERDA
		JMP CICLO
	DERECHA:
		CMP AH,4DH
		JNE SUP
			CALL MUEVE_DERECHA
		JMP CICLO
	SUP:
		CMP AH,53H
		JNE FINC
			CALL RESTABLECER			
			MOV DL,X1
			MOV DH,Y1
			CALL POSICIONAR_CURSOR
		JMP CICLO
		
	FINC:
		RET
	CALCULADORA ENDP
	
	;LEER_TECLADO_CALCULADORA
	;Lee el teclado de la calculadora
	;@param
	;@ret
	
	LEER_TECLADO_CALCULADORA PROC NEAR
		CALL LEER_CURSOR
	SUM:
		CMP AL,2BH
		JNE RES
			MOV BP,1
			MOV DI,2BH
		JMP FT
	RES: 
		CMP AL,2DH
		JNE MULTI
			MOV BP,1
			MOV DI,2DH
		JMP FT
	MULTI:
		CMP AL,78H
		JNE DIVI
			MOV BP,1
			MOV DI,78H
		JMP FT
	DIVI:
		CMP AL,246
		JNE IGU
			MOV BP,1
			MOV DI,246
		JMP FT
	IGU:
		CMP AL,3DH
		JNE BORR
			MOV AX,NUM1
			MOV BX,NUM2
			CALL OPERAR
		JMP FT
	BORR:
		CMP AL, 4CH
		JNE SIGNUMS
			CALL RESTABLECER			
			MOV DL,X1
			MOV DH,Y1
			CALL POSICIONAR_CURSOR
		CALL FT
	SIGNUMS:
		CALL ROTAR_NUMERO
	FT: 
		RET
	LEER_TECLADO_CALCULADORA ENDP
	
	;MUEVE_ARRIBA
	;Mueve el cursor arriba 
	;@param X1	Desplazamiento por columnas
	;@param Y1	Desplazamiento por filas
	;@ret
	
	MUEVE_ARRIBA PROC NEAR
		CMP Y1,7
		JE FA
			SUB Y1,4
			MOV DL,X1
			MOV DH,Y1
			CALL POSICIONAR_CURSOR
		FA:RET
	MUEVE_ARRIBA ENDP
	
	;MUEVE_ABAJO
	;Mueve el cursor abajo 
	;@param X1	Desplazamiento por columnas
	;@param Y1	Desplazamiento por filas
	;@ret
	
	MUEVE_ABAJO PROC NEAR
		CMP Y1,27
		JE FB
			ADD Y1,4
			MOV DL,X1
			MOV DH,Y1
			CALL POSICIONAR_CURSOR
		FB:RET
	MUEVE_ABAJO ENDP
	
	;MUEVE_IZQUIERDA
	;Mueve el cursor izquierda
	;@param X1	Desplazamiento por columnas
	;@param Y1	Desplazamiento por filas
	;@ret
	
	MUEVE_IZQUIERDA PROC NEAR
		CMP X1,28
		JE FI
			SUB X1,6
			MOV DL,X1
			MOV DH,Y1
			CALL POSICIONAR_CURSOR
		FI:RET
	MUEVE_IZQUIERDA ENDP
	
	;MUEVE_DERECHA
	;Mueve el cursor derecha
	;@param X1	Desplazamiento por columnas
	;@param Y1	Desplazamiento por filas
	;@ret
	
	MUEVE_DERECHA PROC NEAR
		CMP X1,46
		JE FD
			ADD X1,6
			MOV DL,X1
			MOV DH,Y1
			CALL POSICIONAR_CURSOR
	FD: RET
	MUEVE_DERECHA ENDP
	
	;RESTABLECER
	;Reinicia valores por defecto
	;@param
	;@ret
	
	RESTABLECER PROC NEAR
		MOV BP,0
		MOV NUM1,0
		MOV NUM2,0
		MOV AX,0000H ;Reiniciar registro
		CALL DISPLAY_CALCULADORA
		RET
	RESTABLECER ENDP
	
	;ASCII_ENTERO
	;Convierte caracter numerico de ASCII a entero
	;@param	AL	Codigo ASCII a convertir
	;@ret	AX	Numero entero hexadecimal DE 16 bits
	
	ASCII_ENTERO PROC NEAR
		MOV AH,00H	
	NUMEROS:
		CMP AL,30H	;NUMERO
		JL LETRASM
		CMP AL,39H
		JG LETRASM
		SUB AL,30H
	LETRASM:		
		CMP AL,41H	;MAYUSCULA
		JL FIN
		CMP AL,46H
		JG FIN
		SUB AL,37H
    FIN:
		RET
	ASCII_ENTERO ENDP
	
	;ROTAR_NUMERO
	;Rota a 4 bits a la izquierda
	;@param	AL	Codigo ASCII a ROTAR_NUMERO
	;@ret	AX	Numero entero hexadecimal DE 16 bits
	
	ROTAR_NUMERO PROC NEAR
		MOV DL,44
		MOV DH,3
		CALL POSICIONAR_CURSOR
		
		CALL ASCII_ENTERO
		
		CMP BP,1
		JE SIGNUM
			MOV CL,4
			SHL NUM1,CL
			ADD NUM1,AX
			MOV AX,NUM1
		JMP FINEMP
	SIGNUM:
			MOV CL,4
			SHL NUM2,CL
			ADD NUM2,AX
			MOV AX,NUM2		
	FINEMP:
		CALL IMPRIMIR_REGISTRO
		RET
	ROTAR_NUMERO ENDP
	
	;IMPRIMIR_REGISTRO
	;Muestra los numeros entero del registro en hexadecimal
	;@param	AX	Registro de 16 bits
	;@ret
	
	IMPRIMIR_REGISTRO PROC NEAR
		MOV CX,0004H
		MOV DX,0000
		ENTERO_ASCII:
			MOV BX,10H ;DIVISOR
			DIV BX
		NUMERO:
			CMP DL,0
			JL LETRA
			CMP DL,9
			JG LETRA
			ADD DL,30H
		LETRA:
			CMP DL,10
			JL CONTINUA
			CMP DL,15
			JG CONTINUA
			ADD DL,37H
		CONTINUA:
			MOV DH,0H
			PUSH DX
			MOV DX,0H
		LOOP ENTERO_ASCII
		
		MOV CX,0004H
		ESCRIBE:
			POP DX
			CALL ESCRIBIR_CARACTER
		LOOP ESCRIBE
		RET
		
	IMPRIMIR_REGISTRO ENDP
	
	;OPERAR
	;Realiza las cuatro operaciones basicas
	;@param	DI	Identificador de operacion ('S':53H, 'R':52H, 'M':4DH, 'D':44H,)
	;@param	AX	Numero 1
	;@param	DX	Numero 2
	;@ret	AX	Registro resultante de alguna operacion
	
	OPERAR PROC NEAR		
	SUMAR:
		CMP DI,2BH
		JNE RESTAR
			ADD AX,BX
			MOV NUM1,AX
		JMP FINOPERACIONES
	RESTAR:
		CMP DI,2DH
		JNE MULTIPLICAR
			SUB AX,BX
			MOV NUM1,AX
		JMP FINOPERACIONES
	MULTIPLICAR:
		CMP DI,78H
		JNE DIVIDIR
			MUL BX
			MOV NUM1,AX
		JMP FINOPERACIONES
	DIVIDIR:	
		CMP DI,246
		JNE FINOPERACIONES
			CMP BX,0
			JNE HAZDIV
				MOV DL,37
				MOV DH,3
				CALL POSICIONAR_CURSOR
				LEA DX,MSJ_PORCERO
				CALL IMPRIMIR_CADENA				
		JMP FINOPERACIONES
		HAZDIV:
			DIV BL				
	FINOPERACIONES:
		CALL DISPLAY_CALCULADORA
		MOV AX,0000H
		MOV BX,0000H
		MOV NUM2,0000H
		RET
	OPERAR ENDP
	
	;DISPLAY_CALCULADORA
	;Muestra un formulario de contrase√±a
	;@param
	;@ret
	
	DISPLAY_CALCULADORA PROC NEAR
		
		PUSH AX
		MOV BH,1FH		
		MOV CL,26
		MOV CH,2
		MOV DL,48
		MOV DH,4
		CALL LIMPIAR_PANTALLA		
		
		MOV DL,44
		MOV DH,3
		CALL POSICIONAR_CURSOR
		POP AX
		
		CALL IMPRIMIR_REGISTRO
		
		RET
	DISPLAY_CALCULADORA ENDP
	
	;PRINCIPAL
	;Funcion principal
	;@param
	;@ret
	
	PRINCIPAL PROC FAR
		PUSH DS
		XOR AX,AX
		PUSH AX
		MOV AX,DATOS
		MOV DS,AX
		
		CALL CALCULADORA
		
		RET
	PRINCIPAL ENDP
CODIGO ENDS
	END PRINCIPAL